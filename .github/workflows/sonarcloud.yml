name: CI

permissions:
  contents: write

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'Readme.md'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Debug Environment Variables
        run: |
          echo "Checking if secrets are available..."
          echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}"
          echo "Checking Docker Status..."
          docker version

      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/application-game:${{ github.run_id }}
          platforms: linux/amd64,linux/arm64

  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for proper analysis

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check Quality Gate Status
        run: |
          STATUS=$(curl -s "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.SONAR_PROJECT_KEY }}" | jq -r '.projectStatus.status')
          if [[ "$STATUS" == "FAILED" ]]; then
            echo "SonarCloud Quality Gate Failed!"
            exit 1
          fi

  update-helm-chart:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.email "omraut0508@gmail.com"
          git config --global user.name "om0508"

      - name: Update Helm Chart Tag
        run: |
          sed -i "s/tag: .*/tag: \"${{ github.run_id }}\"/" application-game-charts/values.yaml

      - name: Commit and Push Changes
        run: |
          git add application-game-charts/values.yaml
          git commit -m "Update tag in Helm chart" || echo "No changes to commit."
          git pull --rebase origin main || git rebase --abort
          git push origin main --force
